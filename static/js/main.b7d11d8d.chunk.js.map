{"version":3,"sources":["components/Button.js","components/TodoSection.js","components/Task.js","components/Tasks.js","components/AddTask.js","components/DoneSection.js","pages/todo.js","img/logo.png","App.js","reportWebVitals.js","index.js"],"names":["Button","text","onClick","className","TodoSection","onAdd","showAddTask","Task","task","onDelete","onToggle","onFinish","reminder","onDoubleClick","id","style","color","cursor","date","status","Tasks","tasks","map","AddTask","useState","setText","setDate","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","currentTarget","checked","DoneSection","Todo","setShowAddTask","Data","todos","setTodos","dones","setDones","console","log","finishTask","filter","doneID","length","slice","newDone","newTask","App","to","path","component","Home","href","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b7d11d8d.chunk.js","sourcesContent":["const Button = ({ text, onClick }) => {\r\n  return (\r\n    <div>\r\n      <button onClick={onClick} className=\"btn\">\r\n        {text}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import Button from \"./Button\";\r\n\r\nconst TodoSection = ({ onAdd, showAddTask }) => {\r\n  return (\r\n    <div className=\"header\">\r\n      <h1>To-Do</h1>\r\n      <Button onClick={onAdd} text={showAddTask ? \"Close\" : \"Add\"} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoSection;\r\n","import { FaTimes, FaRegCheckCircle } from \"react-icons/fa\";\r\n\r\nconst Task = ({ task, onDelete, onToggle, onFinish }) => {\r\n  return (\r\n    <div\r\n      className={`task ${task.reminder ? \"reminder\" : \"\"}`}\r\n      // if task reminder = true the className will be \"task reminder\" and corresponding style will be applied\r\n      onDoubleClick={() => onToggle(task.id)}\r\n    >\r\n      <h3>\r\n        {task.text}\r\n        <FaTimes\r\n          style={{ color: \"grey\", cursor: \"pointer\" }}\r\n          onClick={() => onDelete(task.id)}\r\n        />\r\n      </h3>\r\n      <p>{task.date}</p>\r\n      {task.status === \"todo\" ? (\r\n        <FaRegCheckCircle onClick={() => onFinish(task.id)} />\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Task;\r\n","import Task from \"./Task\";\r\n\r\nconst Tasks = ({ tasks, onDelete, onToggle, onFinish }) => {\r\n  return (\r\n    <>\r\n      {tasks.map((task) => (\r\n        <Task\r\n          key={task.id}\r\n          task={task}\r\n          onDelete={onDelete}\r\n          onToggle={onToggle}\r\n          onFinish={onFinish}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Tasks;\r\n","import { useState } from \"react\";\r\n\r\nconst AddTask = ({ onAdd }) => {\r\n  const [text, setText] = useState(\"\");\r\n  const [date, setDate] = useState(\"\");\r\n  const [reminder, setReminder] = useState(false);\r\n  const status = \"todo\";\r\n\r\n  const onSubmit = (e) => {\r\n    // submit event for the form\r\n    e.preventDefault();\r\n\r\n    if (!text) {\r\n      alert(\"Please add task\");\r\n      // if user input empty test, pop alert window\r\n      return;\r\n    }\r\n\r\n    onAdd({ text, date, reminder, status });\r\n\r\n    setText(\"\");\r\n    setDate(\"\");\r\n    setReminder(false);\r\n    // reset inpput fields\r\n  };\r\n\r\n  return (\r\n    // addTask pannel is a togglable form pannel, users can create tasks from the panel\r\n    <form className=\"add-form\" onSubmit={onSubmit}>\r\n      <div className=\"form-control\">\r\n        <label>Task</label>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Add Task\"\r\n          value={text}\r\n          onChange={(e) => setText(e.target.value)}\r\n        />\r\n      </div>\r\n      <div className=\"form-control\">\r\n        <label>Date</label>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Add Date\"\r\n          value={date}\r\n          onChange={(e) => setDate(e.target.value)}\r\n        />\r\n      </div>\r\n      <div className=\"form-control\">\r\n        <label>Reminder</label>\r\n        <input\r\n          type=\"checkbox\"\r\n          value={reminder}\r\n          onChange={(e) => setReminder(e.currentTarget.checked)}\r\n        />\r\n      </div>\r\n\r\n      <input className=\"btn\" type=\"submit\" value=\"Add task\" />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AddTask;\r\n","const DoneSection = () => {\r\n  return (\r\n    <div className=\"header\">\r\n      <h1>Done</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DoneSection;\r\n","import TodoSection from \"../components/TodoSection\";\r\nimport Tasks from \"../components/Tasks\";\r\nimport AddTask from \"../components/AddTask\";\r\nimport DoneSection from \"../components/DoneSection\";\r\nimport Data from \"../Data.json\";\r\n\r\nimport \"../index.css\";\r\nimport { useState } from \"react\";\r\n\r\nfunction Todo() {\r\n  const [showAddTask, setShowAddTask] = useState(false);\r\n  // useState hook for manimupating the state of toggle pannel\r\n  const [todos, setTodos] = useState([...Data[\"todos\"]]);\r\n  const [dones, setDones] = useState([...Data[\"dones\"]]);\r\n  console.log(...todos);\r\n  console.log(...dones);\r\n\r\n  //Add Task\r\n  const addTask = (task) => {\r\n    const id = todos.length !== 0 ? todos.slice(-1)[0].id + 1 : 0;\r\n    // auto incerased ID id is the new ID for newTask, id = lastId + 1 OR 0\r\n    // When task list is not empty, read the id of last object in the list then + 1; else assign with 0\r\n    const newTask = { id, ...task };\r\n    setTodos([...todos, newTask]);\r\n  };\r\n\r\n  // Finish task, taskd finished will be transfered to Done section\r\n  const finishTask = (id) => {\r\n    setTodos(todos.filter((task) => task.id !== id));\r\n    const doneID = dones.length !== 0 ? dones.slice(-1)[0].id + 1 : 0;\r\n    const newDone = todos.filter((task) => task.id === id);\r\n    newDone[0].id = doneID;\r\n    newDone[0].status = \"done\";\r\n    console.log(...newDone);\r\n    setDones([...dones, ...newDone]);\r\n    console.log(dones);\r\n  };\r\n\r\n  //Delete task\r\n  const deleteTodos = (id) => {\r\n    setTodos(todos.filter((task) => task.id !== id));\r\n    console.log([...todos], [...dones]);\r\n    // setTasks manipulates the current tasks list\r\n    // Using tasks.filter here will filter out all the tasks that has different id as the triggered one(parameter), returning the rest of the list\r\n  };\r\n\r\n  const deleteDones = (id) => {\r\n    setDones(dones.filter((task) => task.id !== id));\r\n  };\r\n\r\n  //Toggle Reminder\r\n  const toggleReminder = (id) => {\r\n    setTodos(\r\n      todos.map(\r\n        (task) =>\r\n          task.id === id ? { ...task, reminder: !task.reminder } : task\r\n        // find task in tasks list and change it's reminder state\r\n      )\r\n    );\r\n  };\r\n\r\n  // Todo: finished tasks transfered to \"Done\"\r\n\r\n  return (\r\n    <div className=\"todo\">\r\n      <TodoSection\r\n        onAdd={() => setShowAddTask(!showAddTask)}\r\n        showAddTask={showAddTask}\r\n        todos={todos}\r\n      />\r\n      {\r\n        showAddTask && <AddTask onAdd={addTask} />\r\n        // if showAddTask = true show addTask panel else hide\r\n      }\r\n\r\n      {todos.length > 0 ? (\r\n        <Tasks\r\n          tasks={todos}\r\n          onDelete={deleteTodos}\r\n          onToggle={toggleReminder}\r\n          onFinish={finishTask}\r\n        />\r\n      ) : (\r\n        \"No Task currently, click Add to create a new task\"\r\n      )}\r\n      <DoneSection dones={dones} />\r\n      {dones.length > 0 ? (\r\n        <Tasks\r\n          tasks={dones}\r\n          onDelete={deleteDones}\r\n          onToggle={null}\r\n          onFinish={finishTask}\r\n        />\r\n      ) : (\r\n        \"No Task currently, click Add to create a new task\"\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Todo;\r\n","export default __webpack_public_path__ + \"static/media/logo.a0e97c14.png\";","import \"./index.css\";\r\n\r\n// Import routing DOM\r\nimport React from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\n\r\nimport Todo from \"./pages/todo\";\r\nimport logo from \"./img/logo.png\";\r\n\r\nfunction App() {\r\n  // root component\r\n  return (\r\n    <div className=\"container\">\r\n      {/* routing for app */}\r\n      <Router>\r\n        <div>\r\n          <nav className=\"nav\">\r\n            <ul className=\"nav-btn\">\r\n              <li>\r\n                <Link to=\"/\">ToDo</Link>\r\n              </li>\r\n            </ul>\r\n          </nav>\r\n\r\n          {/* A <Switch> looks through its children <Route>s and\r\n                renders the first one that matches the current URL. */}\r\n          <Switch>\r\n            <Route path=\"/\" component={Todo}>\r\n              <Home />\r\n            </Route>\r\n          </Switch>\r\n        </div>\r\n        <footer>\r\n          <h5>Epic Byte</h5>\r\n          <p>Yuan, Beamish, Wozniak, Hollingworth </p>\r\n          <p>\r\n            CDU HIT226 | &#169; 2021 |{\" \"}\r\n            <a href=\"https://epicbyte-cdu.bitbucket.io/project/pages/index.html\">\r\n              Home page\r\n            </a>\r\n          </p>\r\n        </footer>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n// routing\r\nfunction Home() {\r\n  return Todo();\r\n}\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}